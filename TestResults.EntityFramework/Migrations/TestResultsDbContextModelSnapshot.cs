// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace TestResults.EntityFramework.Migrations;

[DbContext(typeof(TestResultsDbContext))]
partial class TestResultsDbContextModelSnapshot
    : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

        modelBuilder.Entity("TestResults.Entities.MemoryUsageResult", b =>
        {
            b.Property<Guid>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT");

            b.Property<string>("AlgorithmName")
                .IsRequired()
                .HasColumnType("TEXT");

            b.Property<long>("DecryptionMemoryUsage")
                .HasColumnType("INTEGER");

            b.Property<long>("EncryptionMemoryUsage")
                .HasColumnType("INTEGER");

            b.Property<string>("Input")
                .IsRequired()
                .HasColumnType("TEXT");

            b.Property<bool>("IsSuccessful")
                .HasColumnType("INTEGER");

            b.HasKey("Id");

            b.HasIndex("AlgorithmName");

            b.ToTable("MemoryUsageResults");
        });

        modelBuilder.Entity("TestResults.Entities.RunTimeResult", b =>
        {
            b.Property<Guid>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT");

            b.Property<string>("AlgorithmName")
                .IsRequired()
                .HasColumnType("TEXT");

            b.Property<string>("Input")
                .IsRequired()
                .HasColumnType("TEXT");

            b.Property<bool>("IsSuccessful")
                .HasColumnType("INTEGER");

            b.Property<double>("TimeToDecrypt")
                .HasColumnType("REAL");

            b.Property<double>("TimeToEncrypt")
                .HasColumnType("REAL");

            b.HasKey("Id");

            b.HasIndex("AlgorithmName");

            b.ToTable("RunTimeResults");
        });
#pragma warning restore 612, 618
    }
}
